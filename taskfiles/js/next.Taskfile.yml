# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

env:
  NEXT_TELEMETRY_DISABLED: "1"

tasks:
  dev:
    internal: true
    desc: Run the Next.js app in development mode
    deps: [":js:install-deps"]
    dotenv: [env/run.local.env, env/run.env]
    cmd: "{{.JS_EXEC}} next dev --turbopack"

  build:
    internal: true
    desc: Build the Next.js app for production
    deps:
      - for: { var: JS_NEXT_BUILD_DEPS }
        task: ":{{.ITEM}}"
    sources:
      - next.config.*
      - tsconfig.json
      - public/**
      - src/**
      - exclude: src/**/*.{stories,test}.*
    generates:
      - out/next/dist/**
    cmd: "{{.JS_EXEC}} next build --turbopack"

  build:standalone:
    internal: true
    desc: Build the Next.js app for production in standalone mode
    deps:
      - for: { var: JS_NEXT_BUILD_DEPS }
        task: ":{{.ITEM}}"
    sources:
      - next.config.*
      - tsconfig.json
      - public/**
      - src/**
      - exclude: src/**/*.{stories,test}.*
    generates:
      - out/next/dist/**
      - out/next/standalone/**
    env:
      NEXT_STANDALONE: "true"
    cmds:
      - "{{.JS_EXEC}} next build --turbopack"
      - rm -rf out/next/standalone
      - cp -r out/next/dist/standalone out/next/standalone
      - cp out/next/dist/package.json out/next/standalone/package.json
      - mkdir -p out/next/standalone/out/next/dist
      - cp -r out/next/dist/cache out/next/standalone/out/next/dist/cache
      - cp -r out/next/dist/static out/next/standalone/out/next/dist/static
      - cp -r public out/next/standalone/

  start:
    internal: true
    desc: Start the Next.js production server
    deps: [build]
    dotenv: [env/run.local.env, env/run.env]
    cmd: "{{.JS_EXEC}} next start"

  start:standalone:
    internal: true
    desc: Start the Next.js production server in standalone mode
    deps: [build:standalone]
    dotenv: [env/run.local.env, env/run.env]
    cmd: node out/next/standalone/server.js
